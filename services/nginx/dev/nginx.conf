worker_processes  1;

events {
    worker_connections 1024; 
}

http {
    sendfile on;

    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Host $server_name;
    server_tokens off;

    # This is the dns resolver for docker.
    resolver 127.0.0.11;

    server {
        listen 80;
        client_max_body_size 500M;

        location ~ ^/generate/(.*)$ {
            # If we set the upstream host as a variable here it causes nginx to NOT crash during bootup.
            # This allows us to start nginx without needing all the upstream services started (we only need to start what we want)
            set $upstream http://backend:8010;
            # $1 is the path from regex and $is_args$args are the query params which we pass to the upstream.
            proxy_pass          $upstream/generate/$1$is_args$args;
            proxy_redirect      off;
        }

        location ~ ^/(.*)$ {
            set $upstream http://frontend:8080;
            proxy_pass          $upstream/$1$is_args$args;
            proxy_redirect      off;

            # For HMR websockets, prevents errors in the browser console. Technically HMR works without these.
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}
